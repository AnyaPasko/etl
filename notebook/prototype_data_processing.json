{
	"name": "prototype_data_processing",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "actestspark",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "d45997c8-db9b-4b78-b2a2-4cc15a509d76"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"enableDebugMode": false,
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/9a173807-014a-437d-a720-e2f0506e3157/resourceGroups/data-prototyping/providers/Microsoft.Synapse/workspaces/ac-test/bigDataPools/actestspark",
				"name": "actestspark",
				"type": "Spark",
				"endpoint": "https://ac-test.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/actestspark",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "3.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql import SparkSession\r\n",
					"import pandas as pd\r\n",
					"\r\n",
					"spark = SparkSession.builder.getOrCreate()\r\n",
					"\r\n",
					"spark.conf.set('spark.sql.repl.eagerEval.enabled', True)"
				],
				"execution_count": 1
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Reading data from Azure Storage"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"pd.set_option('display.width', None)\r\n",
					"\r\n",
					"# Set the required configs\r\n",
					"source_full_storage_account_name = \"anyatesting.dfs.core.windows.net\"\r\n",
					"spark.conf.set(f\"spark.storage.synapse.anyatesting.dfs.core.windows.net.linkedServiceName\", \"anya_gen2_linked_storage\")\r\n",
					"sc._jsc.hadoopConfiguration().set(f\"fs.azure.account.auth.type.{source_full_storage_account_name}\", \"SAS\")\r\n",
					"sc._jsc.hadoopConfiguration().set(f\"fs.azure.sas.token.provider.type.{source_full_storage_account_name}\", \"com.microsoft.azure.synapse.tokenlibrary.LinkedServiceBasedSASProvider\")\r\n",
					"\r\n",
					"# Python code\r\n",
					"df = spark.read.csv('abfss://airbytecontainer@anyatesting.dfs.core.windows.net/emails/2025_01_28_1738062022348_0.csv', header=True)\r\n",
					"\r\n",
					"# df = (\r\n",
					"#     df.withColumnRenamed('_airbyte_emitted_at', 'created_at')\r\n",
					"#       .withColumnRenamed('_airbyte_ab_id', 'id')\r\n",
					"#     #   .withColumnRenamed('_airbyte_data', 'data')\r\n",
					"# )\r\n",
					"# df.show(n=5, truncate=False)\r\n",
					"\r\n",
					"df[['post_id', 'text']]"
				],
				"execution_count": 2
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Writing data to Azure Storage"
				]
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"\n",
					""
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"columns_to_include = [\"post_id\", \"text\"]  # Replace with your column names\n",
					"df = df[columns_to_include]"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql.types import *\n",
					"\n",
					"# Primary storage info\n",
					"\n",
					"account_name = 'anyatesting' # fill in your primary account name\n",
					"container_name = 'outputdata' # fill in your container name\n",
					"relative_path = 'emails' # fill in your relative folder path\n",
					"\n",
					"adls_path = 'abfss://%s@%s.dfs.core.windows.net/%s' % (container_name, account_name, relative_path)\n",
					"\n",
					"parquet_path = adls_path + '/2025_01_28_1738062022348_0'\n",
					"json_path = adls_path + '/2025_01_28_1738062022348_0'\n",
					"csv_path = adls_path + '/2025_01_28_1738062022348_0'\n",
					"\n",
					"df.write.option(\"header\", \"true\").option(\"delimiter\", \",\").mode(\"overwrite\").csv(csv_path)\n",
					"# df.write.option(\"header\", \"true\").option(\"delimiter\", \",\").mode(\"overwrite\").json(json_path)"
				],
				"execution_count": 9
			}
		]
	}
}